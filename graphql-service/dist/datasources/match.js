"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;const { RESTDataSource } = require("apollo-datasource-rest");

class MatchAPI extends RESTDataSource {
  constructor() {
    super();
    this.baseURL = "http://localhost:5000/";
  }

  matchReducer(match) {
    return match;
  }

  async getAllMatches() {
    const response = await this.get("matches");
    return Array.isArray(response) ?
    response.map(match => this.matchReducer(match)) :
    [];
  }

  async getMatchesByTournamentID({ tournamentId }) {
    const response = await this.get(`tournament/${tournamentId}/matches`);
    return Array.isArray(response) ?
    response.map(match => this.matchReducer(match)) :
    [];
  }

  async getMatchesByPlayerID({ playerId }) {
    const response = await this.get(`player/${playerId}/matches`);
    return Array.isArray(response) ?
    response.map(match => this.matchReducer(match)) :
    [];
  }

  async getMatch({ id }) {
    const response = await this.get(`match/${id}`);
    return this.matchReducer(response);
  }}var _default =


MatchAPI;exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRhc291cmNlcy9tYXRjaC5qcyJdLCJuYW1lcyI6WyJSRVNURGF0YVNvdXJjZSIsInJlcXVpcmUiLCJNYXRjaEFQSSIsImNvbnN0cnVjdG9yIiwiYmFzZVVSTCIsIm1hdGNoUmVkdWNlciIsIm1hdGNoIiwiZ2V0QWxsTWF0Y2hlcyIsInJlc3BvbnNlIiwiZ2V0IiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiZ2V0TWF0Y2hlc0J5VG91cm5hbWVudElEIiwidG91cm5hbWVudElkIiwiZ2V0TWF0Y2hlc0J5UGxheWVySUQiLCJwbGF5ZXJJZCIsImdldE1hdGNoIiwiaWQiXSwibWFwcGluZ3MiOiJvR0FBQSxNQUFNLEVBQUVBLGNBQUYsS0FBcUJDLE9BQU8sQ0FBQyx3QkFBRCxDQUFsQzs7QUFFQSxNQUFNQyxRQUFOLFNBQXVCRixjQUF2QixDQUFzQztBQUNwQ0csRUFBQUEsV0FBVyxHQUFHO0FBQ1o7QUFDQSxTQUFLQyxPQUFMLEdBQWUsd0JBQWY7QUFDRDs7QUFFREMsRUFBQUEsWUFBWSxDQUFDQyxLQUFELEVBQVE7QUFDbEIsV0FBT0EsS0FBUDtBQUNEOztBQUVELFFBQU1DLGFBQU4sR0FBc0I7QUFDcEIsVUFBTUMsUUFBUSxHQUFHLE1BQU0sS0FBS0MsR0FBTCxDQUFTLFNBQVQsQ0FBdkI7QUFDQSxXQUFPQyxLQUFLLENBQUNDLE9BQU4sQ0FBY0gsUUFBZDtBQUNIQSxJQUFBQSxRQUFRLENBQUNJLEdBQVQsQ0FBYU4sS0FBSyxJQUFJLEtBQUtELFlBQUwsQ0FBa0JDLEtBQWxCLENBQXRCLENBREc7QUFFSCxNQUZKO0FBR0Q7O0FBRUQsUUFBTU8sd0JBQU4sQ0FBK0IsRUFBRUMsWUFBRixFQUEvQixFQUFpRDtBQUMvQyxVQUFNTixRQUFRLEdBQUcsTUFBTSxLQUFLQyxHQUFMLENBQVUsY0FBYUssWUFBYSxVQUFwQyxDQUF2QjtBQUNBLFdBQU9KLEtBQUssQ0FBQ0MsT0FBTixDQUFjSCxRQUFkO0FBQ0hBLElBQUFBLFFBQVEsQ0FBQ0ksR0FBVCxDQUFhTixLQUFLLElBQUksS0FBS0QsWUFBTCxDQUFrQkMsS0FBbEIsQ0FBdEIsQ0FERztBQUVILE1BRko7QUFHRDs7QUFFRCxRQUFNUyxvQkFBTixDQUEyQixFQUFFQyxRQUFGLEVBQTNCLEVBQXlDO0FBQ3ZDLFVBQU1SLFFBQVEsR0FBRyxNQUFNLEtBQUtDLEdBQUwsQ0FBVSxVQUFTTyxRQUFTLFVBQTVCLENBQXZCO0FBQ0EsV0FBT04sS0FBSyxDQUFDQyxPQUFOLENBQWNILFFBQWQ7QUFDSEEsSUFBQUEsUUFBUSxDQUFDSSxHQUFULENBQWFOLEtBQUssSUFBSSxLQUFLRCxZQUFMLENBQWtCQyxLQUFsQixDQUF0QixDQURHO0FBRUgsTUFGSjtBQUdEOztBQUVELFFBQU1XLFFBQU4sQ0FBZSxFQUFFQyxFQUFGLEVBQWYsRUFBdUI7QUFDckIsVUFBTVYsUUFBUSxHQUFHLE1BQU0sS0FBS0MsR0FBTCxDQUFVLFNBQVFTLEVBQUcsRUFBckIsQ0FBdkI7QUFDQSxXQUFPLEtBQUtiLFlBQUwsQ0FBa0JHLFFBQWxCLENBQVA7QUFDRCxHQWxDbUMsQzs7O0FBcUN2Qk4sUSIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgUkVTVERhdGFTb3VyY2UgfSA9IHJlcXVpcmUoXCJhcG9sbG8tZGF0YXNvdXJjZS1yZXN0XCIpO1xyXG5cclxuY2xhc3MgTWF0Y2hBUEkgZXh0ZW5kcyBSRVNURGF0YVNvdXJjZSB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBzdXBlcigpO1xyXG4gICAgdGhpcy5iYXNlVVJMID0gXCJodHRwOi8vbG9jYWxob3N0OjUwMDAvXCI7XHJcbiAgfVxyXG5cclxuICBtYXRjaFJlZHVjZXIobWF0Y2gpIHtcclxuICAgIHJldHVybiBtYXRjaDtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldEFsbE1hdGNoZXMoKSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuZ2V0KFwibWF0Y2hlc1wiKTtcclxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHJlc3BvbnNlKVxyXG4gICAgICA/IHJlc3BvbnNlLm1hcChtYXRjaCA9PiB0aGlzLm1hdGNoUmVkdWNlcihtYXRjaCkpXHJcbiAgICAgIDogW107XHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRNYXRjaGVzQnlUb3VybmFtZW50SUQoeyB0b3VybmFtZW50SWQgfSkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmdldChgdG91cm5hbWVudC8ke3RvdXJuYW1lbnRJZH0vbWF0Y2hlc2ApO1xyXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocmVzcG9uc2UpXHJcbiAgICAgID8gcmVzcG9uc2UubWFwKG1hdGNoID0+IHRoaXMubWF0Y2hSZWR1Y2VyKG1hdGNoKSlcclxuICAgICAgOiBbXTtcclxuICB9XHJcblxyXG4gIGFzeW5jIGdldE1hdGNoZXNCeVBsYXllcklEKHsgcGxheWVySWQgfSkge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmdldChgcGxheWVyLyR7cGxheWVySWR9L21hdGNoZXNgKTtcclxuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHJlc3BvbnNlKVxyXG4gICAgICA/IHJlc3BvbnNlLm1hcChtYXRjaCA9PiB0aGlzLm1hdGNoUmVkdWNlcihtYXRjaCkpXHJcbiAgICAgIDogW107XHJcbiAgfVxyXG5cclxuICBhc3luYyBnZXRNYXRjaCh7IGlkIH0pIHtcclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5nZXQoYG1hdGNoLyR7aWR9YCk7XHJcbiAgICByZXR1cm4gdGhpcy5tYXRjaFJlZHVjZXIocmVzcG9uc2UpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTWF0Y2hBUEk7XHJcbiJdfQ==